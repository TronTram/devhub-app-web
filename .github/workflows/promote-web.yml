name: On Promotion to Test or Production for Web
on: 
  deployment
env:
  PULL_NUMBER: ${{ github.event.deployment.payload.pr }}
  MICRO_SERVICE: ${{ github.event.deployment.payload.microservice }}
  DEPLOY_REF: ${{ github.event.deployment.ref }}
  DEPLOYMENT_ID: ${{ github.event.deployment.id }}
  ENVIRONMENT: ${{ github.event.deployment.environment }}
  INFRA_NAME: devhub-app-web
  SUFFIX: "-${{ github.event.deployment.payload.pr }}"
  TEST_IMAGE_TAG: test
jobs:
  promote-environment:
    name: Promote Web to Environment
    if: github.event.deployment.payload.microservice == 'web' && 
      (
        github.event.deployment.environment == 'staging' || 
        github.event.deployment.environment == 'qa' || 
        github.event.deployment.environment == 'production' 
      )
    runs-on: ubuntu-20.04  
    steps:
      - uses: actions/checkout@v1
      
      - name: Change Deploy Status to In Progress
        uses: unacast/actions-github-deployment-status@0.4.0
        with:
          github_token: ${{ github.token }}
          status: in_progress
      - name: Map the deployments environment to a valid Openshift Namespace
        env:
          TOOLS_NAMESPACE: ${{ secrets.TOOLS_NAMESPACE }}
          PROD_NAMESPACE: ${{ secrets.PROD_NAMESPACE }}
          DEV_NAMESPACE: ${{ secrets.DEV_NAMESPACE }}
        run: |
          _NAMESPACE=$(.github/helpers/github_env_to_namespace.sh ${{  github.event.deployment.environment}})
          echo "::set-env name=DEPLOY_NAMESPACE::$_NAMESPACE"
          echo "Deploying to $_NAMESPACE"
      - name: Cluster Login
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL}}
          parameters: '{"apitoken": "${{ secrets.SA_PASSWORD }}"}'
          cmd: |
            'version'
      - name: Import PR based Image to Environment
        run: |
          oc tag ${{ secrets.TOOLS_NAMESPACE }}/${{ env.INFRA_NAME }}:${{ env.PULL_NUMBER }} \
           $DEPLOY_NAMESPACE/${{ env.INFRA_NAME }}:${{ env.TEST_IMAGE_TAG }}
      - name: Run Deployment
        env:
          TOOLS_NAMESPACE: ${{ secrets.TOOLS_NAMESPACE }}
          GATSBY_MATOMO_URL: ${{ secrets.GATSBY_MATOMO_URL }}
          GATSBY_MATOMO_SITE_URL: ${{ secrets.GATSBY_MATOMO_SITE_URL }}
          GATSBY_MATOMO_SITE_ID: ${{ secrets.GATSBY_MATOMO_SITE_ID }}
          SSO_DEV_URL: ${{ secrets.SSO_DEV_URL }}
          SSO_CLIENT_ID: "devhub-web-${{ env.PULL_NUMBER }}"
          SSO_REALM_NAME: ${{ secrets.SSO_REALM_NAME }}
          MATOMO_URL: ${{ secrets.MATOMO_URL }}
          ALGOLIA_INDEX_NAME_SUFFIX: "-build-${{ env.PULL_NUMBER }}"
        run: |
          oc process -f openshift/templates/web/dc.yaml -n $DEPLOY_NAMESPACE \
          -p NAME=$INFRA_NAME \
          -p IMAGE_NAMESPACE=$DEPLOY_NAMESPACE \
          -p IMAGE_TAG="$TEST_IMAGE_TAG" \
          -p SUFFIX=$SUFFIX \
          -p SEARCHGATE_API_URL="https://searchgate.pathfinder.gov.bc.ca" \
          -p SSO_BASE_URL="$SSO_DEV_URL" \
          -p DEVHUB_API_URL="https://devhub-api-prod-devhub-prod.pathfinder.gov.bc.ca" \
          -p SSO_CLIENT_ID="$SSO_CLIENT_ID" \
          -p SSO_REALM_NAME="$SSO_REALM_NAME" \
          -p ALGOLIA_INDEX_NAME_SUFFIX="$ALGOLIA_INDEX_NAME_SUFFIX" | \
          oc apply -n $DEPLOY_NAMESPACE -f -
          echo "Deployment started"

      - name: Wait for Deployment and Update Status
        env:
          NAMESPACE: ${{ env.DEPLOY_NAMESPACE }}
        run: |
          DEPLOY_STATUS=$(.github/helpers/wait_for_deployment.sh dc/$INFRA_NAME$SUFFIX)
          echo "getting route to set deployment status"
          HOST_NAME=$(.github/helpers/get_route_from_app.sh)
          echo "::set-env name=DEPLOY_STATUS::$DEPLOY_STATUS"
          echo "::set-env name=DEPLOY_ROUTE::$HOST_NAME"

      - name: Change Deploy Status to Success or Failure
        uses: unacast/actions-github-deployment-status@0.4.0
        with:
          github_token: ${{ github.token }}
          status: ${{ env.DEPLOY_STATUS }}
          environment_url: ${{ env.DEPLOY_ROUTE }}